// All jar files from this folder will be added automatically as runtime mod dependencies
def extraModsDir = "extra-mods"
def extraAPIDir = "extra-api"

dependencies {
    // Specify the version of Minecraft to use. If this is any group other than 'net.minecraft', it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency, and its patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    // Real mod deobf dependency examples - these get remapped to your current mappings
    // compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api") // Adds JEI API as a compile dependency
    // runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}") // Adds the full JEI mod as a runtime dependency
    // implementation fg.deobf("com.tterrag.registrate:Registrate:MC${mc_version}-${registrate_version}") // Adds registrate as a dependency

    // Examples using mod jars from ./libs
    // implementation fg.deobf("blank:coolmod-${mc_version}:${coolmod_version}")

    // Locally sourced extra mods for runtime (i.e. testing)
    for (extraModJar in fileTree(dir: extraModsDir, include: '*.jar')) {
        def basename = extraModJar.name.substring(0, extraModJar.name.length() - ".jar".length())
        def versionSep = basename.lastIndexOf('-')
        assert versionSep != -1
        def artifactId = basename.substring(0, versionSep)
        def version = basename.substring(versionSep + 1)
        runtimeOnly fg.deobf("extra-mods:$artifactId:$version")
    }

    // Locally sourced extra mods for compiling (i.e. API)
    for (extraModJar in fileTree(dir: extraAPIDir, include: '*.jar')) {
        def basename = extraModJar.name.substring(0, extraModJar.name.length() - ".jar".length())
        def versionSep = basename.lastIndexOf('-')
        assert versionSep != -1
        def artifactId = basename.substring(0, versionSep)
        def version = basename.substring(versionSep + 1)
        compileOnly "extra-api:$artifactId:$version"
    }

    // EnderIO
    implementation fg.deobf("com.enderio:EnderIO:${minecraft_version}-${enderio_version}")
    runtimeOnly fg.deobf("com.tterrag.registrate:Registrate:MC1.20-${registrate_version}")
    runtimeOnly fg.deobf("dev.gigaherz.graph:GraphLib3:${graphlib_version}")

    // IronJetpacks
    implementation fg.deobf("com.blakebr0.ironjetpacks:IronJetpacks:${minecraft_version}-${ironjetpacks_version}")
    implementation fg.deobf("com.blakebr0.cucumber:Cucumber:${minecraft_version}-${cucumber_version}")

    // JEI - used for testing
    runtimeOnly fg.deobf("mezz.jei:jei-1.20.1-forge:${jei_version}")

    // Mixin & MixinExtras
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    compileOnly(annotationProcessor("io.github.llamalad7:mixinextras-common:${mixinextras_version}"))
    implementation(jarJar("io.github.llamalad7:mixinextras-forge:${mixinextras_version}")) {
        jarJar.ranged(it, "[${mixinextras_version},)")
    }

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}